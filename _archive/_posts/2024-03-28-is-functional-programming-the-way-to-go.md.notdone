---
layout: post
title: Is Functional Programming the Way to Go?
subtitle: Exploring Functional Programming from a Junior Developer's Perspective
cover-img: https://images.unsplash.com/photo-1517694712202-14dd9538aa97?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
thumbnail-img: https://images.unsplash.com/photo-1517694712202-14dd9538aa97?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
share-img: https://images.unsplash.com/photo-1517694712202-14dd9538aa97?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
tags: [functional programming, programming, lambda calculus, javascript]
author: imsujinpark
---

## Introduction
### Which one looks better?
You are given a list of groceries as an array of objects. Each object has a name, category, and price. You need to filter out the fruits from the list and sort them by price from the most expensive to the cheapest.
```javascript
const groceryList = [
    { name: 'Apple', category: 'fruit', price: 1.25 },
    { name: 'Broccoli', category: 'vegetable', price: 0.75 },
    { name: 'Banana', category: 'fruit', price: 0.5 },
    { name: 'Carrot', category: 'vegetable', price: 1 }
];
```
**Option 1**
```javascript
function filterAndSortFruitsByPrice(groceryList) {
    let fruits = [];

    for (let i = 0; i < groceryList.length; i++) {
        if (groceryList[i].category === 'fruit') {
            fruits.push(groceryList[i]);
        }
    }

    for (let i = 0; i < fruits.length - 1; i++) {
        for (let j = 0; j < fruits.length - i - 1; j++) {
            if (fruits[j].price < fruits[j + 1].price) {
                let temp = fruits[j];
                fruits[j] = fruits[j + 1];
                fruits[j + 1] = temp;
            }
        }
    }
    return fruits;
}
```

**Option 2**
```javascript
const filterAndSortFruitsByPrice = (groceryList) => {
    return groceryList
        .filter(item => item.category === 'fruit')
        .sort((a, b) => b.price - a.price);
};
```

Well, many would choose the second option over the first one. 
It is more easy to read and understand.
Simple four lines of code that does the same job as the first one. 
WHY ON EARTH WOULD YOU NOT WRITE LIKE THE SECOND ONE?
